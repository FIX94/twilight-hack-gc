# Copyright 2008-2009  Segher Boessenkool  <segher@kernel.crashing.org>
# GameCube Port Copyright 2016 FIX94
# This code is licensed to you under the terms of the GNU GPL, version 2;
# see file LICENSE or http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt


# Configuration:

# What toolchain prefix should we use
CROSS ?= powerpc-eabi-

# Where are the tools (http://git.infradead.org/users/segher/wii.git)
TOOLS ?= C:\segher_wii_tools

# End of configuration.



# Set CC, LD, OBJCOPY based on CROSS, unless they are set already

ifeq ($(origin CC), default)
	CC := $(CROSS)gcc -m32
endif
ifeq ($(origin LD), default)
	LD := $(CROSS)ld
endif
OBJCOPY ?= $(CROSS)objcopy


# The compiler flags we need.

CFLAGS := -Wall -W -O1 -ffreestanding -mno-eabi -mno-sdata -mcpu=750


# Build with "V=1" to see the commands executed; be quiet otherwise.

ifeq ($(V),1)
	Q :=
else
	Q := @
	MAKEFLAGS += --no-print-directory
endif


targets := gz2e.gci gz2j.gci gz2p.gci
targets-short := gz2e gz2j gz2p

objs := twilight.o

all: $(targets)

$(targets): %.gci : %.dat %.hdr
	@echo "  OUTPUT    $@"
	$(Q)dd if=$(filter %.hdr,$^) of=$@ bs=1 count=64 2>/dev/null
	$(Q)dd if=gciB1.bin of=$@ bs=1 seek=64 count=16384 2>/dev/null
	$(Q)dd if=$(filter %.dat,$^) of=$@ bs=1 seek=16448 count=16384 2>/dev/null

dats := gz2e.dat gz2j.dat gz2p.dat

$(dats): %.dat : %.slot
	@echo "  ZELDAPACK $@"
	$(Q)./pack.sh $@ $(filter %.slot,$^)
	$(Q)tools/zelda-cksum $@

slots := gz2e.slot gz2j.slot gz2p.slot

$(slots): %.slot: %.elf
	@echo "  OBJCOPY   $@"
	$(Q)$(OBJCOPY) -Obinary $< $@

elfs := $(slots:.slot=.elf)

gz2e.elf: baddr := 0x803ECF40+0
gz2j.elf: baddr := 0x803E7080+0
gz2p.elf: baddr := 0x803EEEE0+0
$(elfs): %.elf: %.ld %.o $(objs)
	@echo "  LINK      $@"
	$(Q)$(LD) --defsym baddr=$(baddr) -T $^ -o $@

exploit-objs := $(elfs:.elf=.o)

$(exploit-objs): %.o: start.S head.b
	@echo "  ASSEMBLE  $@"
	$(Q)$(CC) $(CFLAGS) -c $< -o $@

%.o: %.c
	@echo "  COMPILE   $@"
	$(Q)$(CC) $(CFLAGS) -c $< -o $@

clean:
	-rm -f $(targets) $(saves) $(elfs) $(exploit-objs) $(objs) $(slots) $(dats) loader.h
